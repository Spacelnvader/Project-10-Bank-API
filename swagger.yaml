swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: User Accounts API
      description: API for fetching user accounts by ID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The user ID
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/UserAccounts'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /account/{id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Transactions API
      description: API for fetching transactions by userID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The user ID
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '400':
          description: Transactions not found
        '500':
          description: Internal Server Error
    
  /account/{id}/transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Transactions API
      description: Update a transaction's description or category
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The user ID
        - in: path
          name: transactionId
          type: number
          required: true
        - in: body
          name: body
          description: Update transaction's attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: transaction updated successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error




          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  UserAccounts:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            accountId:
              type: string
              example: ABchecking123
            name:
              type: string
              example: ArgentBank checking
            balance:
              type: number
            description:
              type: string   
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction ID
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: account balance after transaction
      transactionType:
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      note:
        type: string
        description: user's notes for transaction
  ApiTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/Transaction"
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: transaction category
      notes: 
        type: string
        description:  user notes about the transaction
      
        